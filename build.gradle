buildscript {
    dependencies {
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.5'
    }
}
// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    /**
     * Use `apply false` in the top-level build.gradle file to add a Gradle
     * plugin as a build dependency but not apply it to the current (root)
     * project. Don't use `apply false` in sub-projects.
     */
    id 'com.android.application' version '7.4.2' apply false
    id 'com.android.library' version '7.4.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.21' apply false
}

/**
 * This block encapsulates custom properties and makes them available to all modules in the project.
 * You can also create properties to specify versions for dependencies. Having consistent versions between modules can avoid conflicts with behavior.
 * Note: Although Gradle lets you define project-wide properties at the module level, avoid doing so,
 * because it causes the modules that share those properties to be coupled. Module coupling makes it more difficult to later export
 * a module as a standalone project and prevents Gradle from using parallel project execution to speed up multi-module builds.
 */
ext {
    compileSdkVersion = 33
    minSDKVersion = 21
    targetSDKVersion = 33
    sourceCompatibilityVersion = JavaVersion.VERSION_11
    targetCompatibilityVersion = JavaVersion.VERSION_11
}